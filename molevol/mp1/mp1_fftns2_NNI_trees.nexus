#NEXUS 

Begin trees;  [Treefile saved Thu Jan  4 16:59:02 2024]
[!
>Data file = mp1_aligned_fftns2.nexus
>Heuristic search settings:
>  Optimality criterion = parsimony
>    Character-status summary:
>      Of 2344 total characters:
>        All characters are of type 'unord'
>        All characters have equal weight
>        1447 characters are constant (proportion = 0.617321)
>        236 variable characters are parsimony-uninformative
>        Number of parsimony-informative characters = 661
>    Gaps are treated as "missing"
>  Starting tree(s) obtained via stepwise addition
>    Addition sequence: random
>    Number of replicates = 100
>    Starting seed = 117
>    Number of trees held at each step = 1
>  Branch-swapping algorithm: nearest-neighbor interchange (NNI)
>    Steepest descent option not in effect
>  Initial 'Maxtrees' setting = 100 (will be auto-increased by 100)
>  Branches collapsed (creating polytomies) if maximum branch length is zero
>  'MulTrees' option in effect
>  No topological constraints in effect
>  Trees are unrooted
>
>Heuristic search completed
>  Total number of rearrangements tried = 74524
>  Score of best tree(s) found = 2564
>  Number of trees retained = 9
>  Time used = 0.14 sec (CPU time = 0.14 sec)
]
	Translate
		1 Blue_Whale,
		2 Orca,
		3 Beluga_Whale,
		4 Horse,
		5 Bactrian_camel,
		6 Domestic_cat,
		7 Dog,
		8 Platypus,
		9 Piggie,
		10 Cattle,
		11 Flying_fox,
		12 Polar_bear,
		13 African_savanna_elephant,
		14 Human,
		15 Sheep,
		16 Komodo_dragon,
		17 Peregrine_falcon,
		18 Hippopotamus,
		19 House_mouse,
		20 Yellowpond_turtle,
		21 Green_anole,
		22 Mexican_finch,
		23 Chinese_alligator,
		24 Indian_glassy_fish,
		25 Denticle_herring
		;
tree 'PAUP_1' = [&U] (((((((((((((1:10,(2:2,(3:5,((5:42,18:21):3,(9:27,(10:27,12:32):5):3):19):28):4):15,15:33):10,11:32):3,4:28):4,(6:21,7:32):13):13,14:32):14,13:60):54,19:66):105,(24:170,25:226):230):91,8:84):95,(16:111,21:155):84):50,(20:66,23:107):41):51,(17:58,22:123):59);
tree 'PAUP_2' = [&U] ((((((((((((((1:10,2:6):0,(3:9,((5:42,18:21):3,(9:27,(10:27,12:32):5):3):15):28):15,15:33):10,11:32):3,4:28):4,(6:21,7:32):13):13,14:32):14,13:60):54,19:66):105,(24:170,25:226):230):91,8:84):95,(16:111,21:155):84):50,(20:66,23:107):41):51,(17:58,22:123):59);
tree 'PAUP_3' = [&U] ((((((((((((((1:9,(3:8,((5:42,18:21):3,(9:27,(10:27,12:32):5):3):16):28):1,2:6):15,15:33):10,11:32):3,4:28):4,(6:21,7:32):13):13,14:32):14,13:60):54,19:66):105,(24:170,25:226):230):91,8:84):95,(16:111,21:155):84):50,(20:66,23:107):41):51,(17:58,22:123):59);
tree 'PAUP_4' = [&U] ((((((((((((1:10,(2:2,(3:5,((5:42,18:21):3,(9:27,(10:27,12:32):5):3):19):28):4):15,15:33):9,(4:29,11:34):1):4,(6:21,7:32):13):13,14:32):14,13:60):54,19:66):105,(24:170,25:226):230):91,8:84):95,(16:111,21:155):84):50,(20:66,23:107):41):51,(17:58,22:123):59);
tree 'PAUP_5' = [&U] (((((((((((((1:10,(2:2,(3:5,((5:42,18:21):3,(9:27,(10:27,12:32):5):3):19):28):4):15,15:33):9,11:33):3,(6:20,7:33):15):6,4:24):13,14:29):17,13:61):53,19:66):105,(24:170,25:226):230):91,8:84):95,(16:111,21:155):84):50,(20:66,23:107):41):51,(17:58,22:123):59);
tree 'PAUP_6' = [&U] (((((((((((((1:10,2:6):0,(3:9,((5:42,18:21):3,(9:27,(10:27,12:32):5):3):15):28):15,15:33):9,(4:29,11:34):1):4,(6:21,7:32):13):13,14:32):14,13:60):54,19:66):105,(24:170,25:226):230):91,8:84):95,(16:111,21:155):84):50,(20:66,23:107):41):51,(17:58,22:123):59);
tree 'PAUP_7' = [&U] ((((((((((((((1:10,2:6):0,(3:9,((5:42,18:21):3,(9:27,(10:27,12:32):5):3):15):28):15,15:33):9,11:33):3,(6:20,7:33):15):6,4:24):13,14:29):17,13:61):53,19:66):105,(24:170,25:226):230):91,8:84):95,(16:111,21:155):84):50,(20:66,23:107):41):51,(17:58,22:123):59);
tree 'PAUP_8' = [&U] (((((((((((((1:9,(3:8,((5:42,18:21):3,(9:27,(10:27,12:32):5):3):16):28):1,2:6):15,15:33):9,(4:29,11:34):1):4,(6:21,7:32):13):13,14:32):14,13:60):54,19:66):105,(24:170,25:226):230):91,8:84):95,(16:111,21:155):84):50,(20:66,23:107):41):51,(17:58,22:123):59);
tree 'PAUP_9' = [&U] ((((((((((((((1:9,(3:8,((5:42,18:21):3,(9:27,(10:27,12:32):5):3):16):28):1,2:6):15,15:33):9,11:33):3,(6:20,7:33):15):6,4:24):13,14:29):17,13:61):53,19:66):105,(24:170,25:226):230):91,8:84):95,(16:111,21:155):84):50,(20:66,23:107):41):51,(17:58,22:123):59);
End;
